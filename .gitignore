*.txt

# Custom
code/result/
code/wandb/
code/.vscode/
code/data/
code/log/
code/logs/
code/checkpoints/
code/.github/
code/out/
code/err/
code/*.pkl
code/*.sh

# Byte-compiled / optimized / DLL files
code/__pycache__/
code/*.py[cod]
code/*$py.class

# C extensions
code/*.so

#text files
code/*.txt

# Distribution / packaging
code/.Python
code/build/
code/develop-eggs/
code/dist/
code/downloads/
code/eggs/
code/.eggs/
code/lib/
code/lib64/
code/parts/
code/sdist/
code/var/
code/wheels/
code/pip-wheel-metadata/
code/share/python-wheels/
code/*.egg-info/
code/.installed.cfg
code/*.egg
code/MANIFEST

code/run_py_pretrain_hopper_medium_v2_2.txt
# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
code/*.manifest
code/*.spec

# Installer logs
code/pip-log.txt
code/pip-delete-this-directory.txt

# Unit test / coverage reports
code/htmlcov/
code/.tox/
code/.nox/
code/.coverage
code/.coverage.*
code/.cache
code/nosetests.xml
code/coverage.xml
code/*.cover
code/*.py,cover
code/.hypothesis/
code/.pytest_cache/

# Translations
code/*.mo
code/*.pot

# Django stuff:
code/*.log
code/local_settings.py
code/db.sqlite3
code/db.sqlite3-journal

# Flask stuff:
code/instance/
code/.webassets-cache

# Scrapy stuff:
code/.scrapy

# Sphinx documentation
code/docs/_build/

# PyBuilder
code/target/

# Jupyter Notebook
code/.ipynb_checkpoints

# IPython
code/profile_default/
code/ipython_config.py

# pyenv
code/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
code/__pypackages__/

# Celery stuff
code/celerybeat-schedule
code/celerybeat.pid

# SageMath parsed files
code/*.sage.py

# Environments
code/.env
code/.venv
# env/
code/venv/
code/ENV/
code/env.bak/
code/venv.bak/

# Spyder project settings
code/.spyderproject
code/.spyproject

# Rope project settings
code/.ropeproject

# mkdocs documentation
code/site

# mypy
code/.mypy_cache/
code/.dmypy.json
code/dmypy.json

# Pyre type checker
code/.pyre/

code/cfg/robomimic/*.sh

code/*.out

























# Custom
code/result/
code/wandb/
code/.vscode/
code/data/
code/log/
code/logs/
code/checkpoints/
code/.github/
code/out/
code/err/
code/*.pkl
code/*.sh

# Byte-compiled / optimized / DLL files
code/__pycache__/
code/*.py[cod]
code/*$py.class

# C extensions
code/*.so

#text files
code/*.txt

# Distribution / packaging
code/.Python
code/build/
code/develop-eggs/
code/dist/
code/downloads/
code/eggs/
code/.eggs/
code/lib/
code/lib64/
code/parts/
code/sdist/
code/var/
code/wheels/
code/pip-wheel-metadata/
code/share/python-wheels/
code/*.egg-info/
code/.installed.cfg
code/*.egg
code/MANIFEST

code/run_py_pretrain_hopper_medium_v2_2.txt
# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
code/*.manifest
code/*.spec

# Installer logs
code/pip-log.txt
code/pip-delete-this-directory.txt

# Unit test / coverage reports
code/htmlcov/
code/.tox/
code/.nox/
code/.coverage
code/.coverage.*
code/.cache
code/nosetests.xml
code/coverage.xml
code/*.cover
code/*.py,cover
code/.hypothesis/
code/.pytest_cache/

# Translations
code/*.mo
code/*.pot

# Django stuff:
code/*.log
code/local_settings.py
code/db.sqlite3
code/db.sqlite3-journal

# Flask stuff:
code/instance/
code/.webassets-cache

# Scrapy stuff:
code/.scrapy

# Sphinx documentation
code/docs/_build/

# PyBuilder
code/target/

# Jupyter Notebook
code/.ipynb_checkpoints

# IPython
code/profile_default/
code/ipython_config.py

# pyenv
code/.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
code/__pypackages__/

# Celery stuff
code/celerybeat-schedule
code/celerybeat.pid

# SageMath parsed files
code/*.sage.py

# Environments
code/.env
code/.venv
# env/
code/venv/
code/ENV/
code/env.bak/
code/venv.bak/

# Spyder project settings
code/.spyderproject
code/.spyproject

# Rope project settings
code/.ropeproject

# mkdocs documentation
code/site

# mypy
code/.mypy_cache/
code/.dmypy.json
code/dmypy.json

# Pyre type checker
code/.pyre/

code/cfg/robomimic/*.sh

code/*.out

code/log_debug/

code/log_debug/


*.pyc


code/installation/d3il/*

*.keras

*.pt

*.hd5